# Title     : Associative in 3 parts
# Objective : Analyze associative learning
# Created by: mariagranell
# Created on: 26/08/2020

#the only thing interesting is a trend in colour yellow in the last 10 trials.
#Specially by selection B

library(car)
library(MASS)
library(lattice)
library(MCMCglmm)
library(lme4)
library(lmerTest)
library("ggpubr")
library(dplyr)

#model disgnosis
library(nortest)
library(gridExtra)
library(emmeans)
library(ggeffects)
## PERFECT TO CHECK MODEL DIAGNOSIS IN GLM. CHECK OVERDISPERSION. CHECK LINK IF MORE INFORMATION NEEDED.
library(DHARMa) #https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html
library(MuMIn)

setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Telencephalon/R_scripts/Reversal_learning")
data <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/Telencephalon/R_scripts/Reversal_learning/Reversal_learning_copy1.csv")

#redefine the class of each variable
data <- within(data, {
  id <- factor(id)
  replicate <- factor(replicate)
  selection <- factor(selection) })
table(data$selection)

#choice means correct or incorrect. Colour is the assigned colour.

#select the associative learning experiment data:
d<-data[data$experiment == "aslearning",]
d<-d[complete.cases(d$choice),]

#divide the data set in 3. there was 30 trials
d1<-d[d$trial<11,]
d2<-d[between(d$trial, 11, 20),]
d3<-d[d$trial>20,]

#MODEL PART1
d1$trial_centered<-d1$trial-5

Anova(model1 <- glmer(choice ~ selection + trial_centered + colour +
  (trial_centered|id) + (trial_centered|replicate),
                          data = d1,
                          na.action=na.exclude,
                          family=binomial,control=glmerControl(optimizer="bobyqa",
                                                               optCtrl=list(maxfun=2e5)))) #extend the maximum number of iterations
summary(model1)

## model diagnostic
dd <- dotplot(ranef(model1,condVar=TRUE))
do.call(grid.arrange,c(dd,list(nrow=1))) #to extract estimates of the random effects
#plotting the residuals in glm is not very useful

# Plot of marginal effects for significant results
plot(ggeffect(model1, terms = c("selection")))
test(emmeans(model1, pairwise ~ selection))

## PERFECT TO CHECK MODEL DIAGNOSIS IN GLM. CHECK OVERDISPERSION. CHECK LINK IF MORE INFORMATION NEEDED.
#library(DHARMa) #https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html
simulationOutput <- simulateResiduals(fittedModel = model1)
plot(simulationOutput)
testDispersion(simulationOutput)

#MODEL PART2
d2$trial_centered<-d2$trial-15

Anova(model2 <- glmer(choice ~ selection + trial_centered + colour +
  (trial_centered|id) + (trial_centered|replicate/selection),
                      data = d2,
                      na.action=na.exclude,
                      family=binomial,control=glmerControl(optimizer="bobyqa",
                                                           optCtrl=list(maxfun=2e5)))) #extend the maximum number of iterations
summary(model2)

## model diagnostic
dd <- dotplot(ranef(model2,condVar=TRUE))
do.call(grid.arrange,c(dd,list(nrow=1))) #to extract estimates of the random effects
#plotting the residuals in glm is not very useful


# Plot of marginal effects for significant results
plot(ggeffect(model2, terms = c("selection")))
test(emmeans(model2, pairwise ~ selection))

## PERFECT TO CHECK MODEL DIAGNOSIS IN GLM. CHECK OVERDISPERSION. CHECK LINK IF MORE INFORMATION NEEDED.
#library(DHARMa) #https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html
simulationOutput <- simulateResiduals(fittedModel = model2)
plot(simulationOutput)
testDispersion(simulationOutput)

#MODEL PART3
d3$trial_centered<-d3$trial-25

Anova(model3 <- glmer(choice ~ selection + trial_centered + colour +
  (trial_centered|id) + (trial_centered|replicate),
                      data = d3,
                      na.action=na.exclude,
                      family=binomial,
                      control=glmerControl(optimizer="bobyqa",
                                           optCtrl=list(maxfun=2e5)))) #extend the maximum number of iterations
summary(model3)

## model diagnostic
dd <- dotplot(ranef(model3,condVar=TRUE))
do.call(grid.arrange,c(dd,list(nrow=1))) #to extract estimates of the random effects
#plotting the residuals in glm is not very useful

# Plot of marginal effects for significant results
plot(ggeffect(model3, terms = c("selection")))
test(emmeans(model3, pairwise ~ selection))

plot(ggeffect(model3, terms = c("colour")))
test(emmeans(model3, pairwise ~ colour))

## PERFECT TO CHECK MODEL DIAGNOSIS IN GLM. CHECK OVERDISPERSION. CHECK LINK IF MORE INFORMATION NEEDED.
#library(DHARMa) #https://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html
simulationOutput <- simulateResiduals(fittedModel = model3)
plot(simulationOutput)
testDispersion(simulationOutput)

d3%>%
  filter(!is.na(choice)) %>%
  group_by(trial, colour, selection) %>%
  summarize(mean_choice = mean(choice),
            lower = binom.test(sum(choice), n())$conf.int[1],
            upper = binom.test(sum(choice), n())$conf.int[2]) %>%
  {ggplot(., aes(trial, mean_choice, ymin = lower, ymax = upper, col = colour)) +
  geom_pointrange(position = position_dodge(0.5), alpha = 0.7) +
  geom_hline(yintercept = 0.5, lty = 2) +
  geom_hline(yintercept = 0.8, lty = 2) +
  scale_color_manual(values = c('red', 'gold')) +
  facet_grid(~selection) +
  theme_classic()+
  ggtitle('Average success over time by treatment and stimulus color (95% CI)')}

d3A<-d3[d3$selection== "A",]
d3B<-d3[d3$selection== "B",]
Anova(model<-glmer(choice~colour + (trial_centered|id) + (trial_centered|replicate),
                   data=d3B,
                   na.action=na.exclude,
                   family=binomial,control=glmerControl(optimizer="bobyqa",
                                                        optCtrl=list(maxfun=2e5))))
#selection line B, the up-selected females are the ones having a preference towards yellow.
#but I runned the model with all the data set and there was no significance for A or B.
#So is just in the last 10 trials when the selection line B preffers yellow.


